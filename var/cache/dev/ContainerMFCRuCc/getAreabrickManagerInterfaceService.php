<?php

namespace ContainerMFCRuCc;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getAreabrickManagerInterfaceService extends App_KernelDevDebugContainer
{
    /**
     * Gets the public 'Pimcore\Extension\Document\Areabrick\AreabrickManagerInterface' shared autowired service.
     *
     * @return \Pimcore\Extension\Document\Areabrick\AreabrickManager
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/pimcore/pimcore/lib/Extension/Document/Areabrick/AreabrickManagerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/pimcore/pimcore/lib/Extension/Document/Areabrick/AreabrickManager.php';

        $container->services['Pimcore\\Extension\\Document\\Areabrick\\AreabrickManagerInterface'] = $instance = new \Pimcore\Extension\Document\Areabrick\AreabrickManager(new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService ??= $container->getService(...), [
            'hero-image' => ['privates', 'App\\Document\\Areabrick\\HeroImage', 'getHeroImageService', true],
            'news' => ['privates', 'app.area.brick.news', 'getApp_Area_Brick_NewsService', true],
            'text-with-image' => ['privates', 'app.area.brick.text_with_image', 'getApp_Area_Brick_TextWithImageService', true],
        ], [
            'hero-image' => '?',
            'news' => '?',
            'text-with-image' => '?',
        ]));

        $instance->registerService('hero-image', 'App\\Document\\Areabrick\\HeroImage');
        $instance->registerService('text-with-image', 'app.area.brick.text_with_image');
        $instance->registerService('news', 'app.area.brick.news');

        return $instance;
    }
}
